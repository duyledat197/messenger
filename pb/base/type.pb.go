// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.14.0
// source: base/type.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventEncodeType int32

const (
	EventEncodeType_EventEncodeType_JSON     EventEncodeType = 0
	EventEncodeType_EventEncodeType_Protobuf EventEncodeType = 1
)

// Enum value maps for EventEncodeType.
var (
	EventEncodeType_name = map[int32]string{
		0: "EventEncodeType_JSON",
		1: "EventEncodeType_Protobuf",
	}
	EventEncodeType_value = map[string]int32{
		"EventEncodeType_JSON":     0,
		"EventEncodeType_Protobuf": 1,
	}
)

func (x EventEncodeType) Enum() *EventEncodeType {
	p := new(EventEncodeType)
	*p = x
	return p
}

func (x EventEncodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventEncodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_type_proto_enumTypes[0].Descriptor()
}

func (EventEncodeType) Type() protoreflect.EnumType {
	return &file_base_type_proto_enumTypes[0]
}

func (x EventEncodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventEncodeType.Descriptor instead.
func (EventEncodeType) EnumDescriptor() ([]byte, []int) {
	return file_base_type_proto_rawDescGZIP(), []int{0}
}

var File_base_type_proto protoreflect.FileDescriptor

const file_base_type_proto_rawDesc = "" +
	"\n" +
	"\x0fbase/type.proto\x12\x04base*I\n" +
	"\x0fEventEncodeType\x12\x18\n" +
	"\x14EventEncodeType_JSON\x10\x00\x12\x1c\n" +
	"\x18EventEncodeType_Protobuf\x10\x01B\x1cZ\x1aopenmyth/messgener/pb/baseb\x06proto3"

var (
	file_base_type_proto_rawDescOnce sync.Once
	file_base_type_proto_rawDescData []byte
)

func file_base_type_proto_rawDescGZIP() []byte {
	file_base_type_proto_rawDescOnce.Do(func() {
		file_base_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_base_type_proto_rawDesc), len(file_base_type_proto_rawDesc)))
	})
	return file_base_type_proto_rawDescData
}

var file_base_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_base_type_proto_goTypes = []any{
	(EventEncodeType)(0), // 0: base.EventEncodeType
}
var file_base_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_base_type_proto_init() }
func file_base_type_proto_init() {
	if File_base_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_base_type_proto_rawDesc), len(file_base_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_type_proto_goTypes,
		DependencyIndexes: file_base_type_proto_depIdxs,
		EnumInfos:         file_base_type_proto_enumTypes,
	}.Build()
	File_base_type_proto = out.File
	file_base_type_proto_goTypes = nil
	file_base_type_proto_depIdxs = nil
}
